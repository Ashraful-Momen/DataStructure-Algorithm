#Recursion: 
-------------
A way of solving problem by having a function calling itself.

-> performing the same operation multipl times with inputs.

-> Base condition is required to stop the function, other ways infity loop will occur.


#Why Recursion:
----------------

1. Recursion thinking is realy important in programming , it help us to break down a big problem into smaller-one and easier to use.

-> Divide problem into smaller sub problem.

-> Desing an algorithm to compute nth.

-> Write a code to list the n....

-> Implement a method to compute all .

-> Practise.

2. The prominent use of recursion in data structure like tree and graph.

3. Interviews.

4. It use in many algorithm (divide and conquere , geedy , dynamic programming).


#How Recursion work:
----------------------

1. A method call itself.

2. Exit from infinity Loop.

def recursionMethod(Parameters):

	if: exit from condition satisfied
	   return some value
	else:
	   recursion method (Modified parameters)

---------------------------------------------------
#r-f: recursion function:
--------------------------
def 	r-f(n):
	if n<1:
		print("n is the less then 1")
	else: 
		r-f(n-1)
		print(n,",")

output: 1, 2, 3, 4
--------------------------------------------------

-------------------------------------------------------------
r-f(4)					     4  <output:1 2 3 4. (stack memory call -> )
    |__					   __|
	r-f(3)				__3
	   |__			       |
	      r-f(2)		     __2
		  |__		    |	
		     r-f(1)	 __1
			|__     |	
			   r-f(0) , isnot call cz condition false.


#explination of recursion function: def r-f(n): use stack memory : ***lifo.
-----------------------------------
r-f(0) <- condition false. stack memory call here...print(n is less than 1)
-------
r-f(1) <- output:1
------
r-f(2) <- output:2
------
r-f(3) <- output:3
------
r-f (4) <- output:4
------
<output:1 2 3 4. (stack memory call -> )stack memory lifo (Last in first out.).

-------------------------------------------------------------------------------
